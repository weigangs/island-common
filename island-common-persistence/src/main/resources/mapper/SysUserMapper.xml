<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lkyl.island.common.ps.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.lkyl.island.common.ps.entity.SysUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="is_deleted" jdbcType="CHAR" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_code, user_name, user_type, email, phone_number, sex, avatar, password, 
    status, login_ip, login_date, create_user, create_time, update_user, update_time, 
    tenant_id, is_deleted, remark
  </sql>
  <select id="selectByExample" parameterType="com.lkyl.island.common.ps.entity.SysUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from sys_user
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lkyl.island.common.ps.entity.SysUserExample">
    delete from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lkyl.island.common.ps.entity.SysUser">
    insert into sys_user (id, user_code, user_name, 
      user_type, email, phone_number, 
      sex, avatar, password, 
      status, login_ip, login_date, 
      create_user, create_time, update_user, 
      update_time, tenant_id, is_deleted, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=VARCHAR}, #{isDeleted,jdbcType=CHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into sys_user
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.userCode != null">
            user_code,
          </if>
          <if test="record.userName != null">
            user_name,
          </if>
          <if test="record.userType != null">
            user_type,
          </if>
          <if test="record.email != null">
            email,
          </if>
          <if test="record.phoneNumber != null">
            phone_number,
          </if>
          <if test="record.sex != null">
            sex,
          </if>
          <if test="record.avatar != null">
            avatar,
          </if>
          <if test="record.password != null">
            password,
          </if>
          <if test="record.status != null">
            status,
          </if>
          <if test="record.loginIp != null">
            login_ip,
          </if>
          <if test="record.loginDate != null">
            login_date,
          </if>
          <if test="record.createUser != null">
            create_user,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateUser != null">
            update_user,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.tenantId != null">
            tenant_id,
          </if>
          <if test="record.isDeleted != null">
            is_deleted,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.userCode != null">
            #{record.userCode,jdbcType=VARCHAR},
          </if>
          <if test="record.userName != null">
            #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.userType != null">
            #{record.userType,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.phoneNumber != null">
            #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            #{record.sex,jdbcType=CHAR},
          </if>
          <if test="record.avatar != null">
            #{record.avatar,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=CHAR},
          </if>
          <if test="record.loginIp != null">
            #{record.loginIp,jdbcType=VARCHAR},
          </if>
          <if test="record.loginDate != null">
            #{record.loginDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createUser != null">
            #{record.createUser,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateUser != null">
            #{record.updateUser,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenantId != null">
            #{record.tenantId,jdbcType=VARCHAR},
          </if>
          <if test="record.isDeleted != null">
            #{record.isDeleted,jdbcType=CHAR},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.lkyl.island.common.ps.entity.SysUserExample" resultType="java.lang.Long">
    select count(*) from sys_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.userCode != null">
            user_code = #{record.userCode,jdbcType=VARCHAR},
          </if>
          <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.userType != null">
            user_type = #{record.userType,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.phoneNumber != null">
            phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            sex = #{record.sex,jdbcType=CHAR},
          </if>
          <if test="record.avatar != null">
            avatar = #{record.avatar,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=CHAR},
          </if>
          <if test="record.loginIp != null">
            login_ip = #{record.loginIp,jdbcType=VARCHAR},
          </if>
          <if test="record.loginDate != null">
            login_date = #{record.loginDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createUser != null">
            create_user = #{record.createUser,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateUser != null">
            update_user = #{record.updateUser,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenantId != null">
            tenant_id = #{record.tenantId,jdbcType=VARCHAR},
          </if>
          <if test="record.isDeleted != null">
            is_deleted = #{record.isDeleted,jdbcType=CHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user
    set id = #{record.id,jdbcType=BIGINT},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      login_date = #{record.loginDate,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update sys_user
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userCode != null">
            user_code = #{record.userCode,jdbcType=VARCHAR},
          </if>
          <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.userType != null">
            user_type = #{record.userType,jdbcType=VARCHAR},
          </if>
          <if test="record.email != null">
            email = #{record.email,jdbcType=VARCHAR},
          </if>
          <if test="record.phoneNumber != null">
            phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            sex = #{record.sex,jdbcType=CHAR},
          </if>
          <if test="record.avatar != null">
            avatar = #{record.avatar,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            password = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.status != null">
            status = #{record.status,jdbcType=CHAR},
          </if>
          <if test="record.loginIp != null">
            login_ip = #{record.loginIp,jdbcType=VARCHAR},
          </if>
          <if test="record.loginDate != null">
            login_date = #{record.loginDate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createUser != null">
            create_user = #{record.createUser,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateUser != null">
            update_user = #{record.updateUser,jdbcType=VARCHAR},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.tenantId != null">
            tenant_id = #{record.tenantId,jdbcType=VARCHAR},
          </if>
          <if test="record.isDeleted != null">
            is_deleted = #{record.isDeleted,jdbcType=CHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lkyl.island.common.ps.entity.SysUser">
    update sys_user
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into sys_user
    (id, user_code, user_name, user_type, email, phone_number, sex, avatar, password, 
      status, login_ip, login_date, create_user, create_time, update_user, update_time, 
      tenant_id, is_deleted, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.userCode,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR}, 
        #{item.userType,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, #{item.phoneNumber,jdbcType=VARCHAR}, 
        #{item.sex,jdbcType=CHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, 
        #{item.status,jdbcType=CHAR}, #{item.loginIp,jdbcType=VARCHAR}, #{item.loginDate,jdbcType=TIMESTAMP}, 
        #{item.createUser,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.tenantId,jdbcType=VARCHAR}, #{item.isDeleted,jdbcType=CHAR}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into sys_user (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'user_code'.toString() == column.value">
          #{item.userCode,jdbcType=VARCHAR}
        </if>
        <if test="'user_name'.toString() == column.value">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'user_type'.toString() == column.value">
          #{item.userType,jdbcType=VARCHAR}
        </if>
        <if test="'email'.toString() == column.value">
          #{item.email,jdbcType=VARCHAR}
        </if>
        <if test="'phone_number'.toString() == column.value">
          #{item.phoneNumber,jdbcType=VARCHAR}
        </if>
        <if test="'sex'.toString() == column.value">
          #{item.sex,jdbcType=CHAR}
        </if>
        <if test="'avatar'.toString() == column.value">
          #{item.avatar,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=CHAR}
        </if>
        <if test="'login_ip'.toString() == column.value">
          #{item.loginIp,jdbcType=VARCHAR}
        </if>
        <if test="'login_date'.toString() == column.value">
          #{item.loginDate,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_user'.toString() == column.value">
          #{item.createUser,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_user'.toString() == column.value">
          #{item.updateUser,jdbcType=VARCHAR}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'tenant_id'.toString() == column.value">
          #{item.tenantId,jdbcType=VARCHAR}
        </if>
        <if test="'is_deleted'.toString() == column.value">
          #{item.isDeleted,jdbcType=CHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>